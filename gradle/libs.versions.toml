[versions]
agp = "8.2.2"
kotlin = "1.9.22"
compose = "1.6.1"
compose-material3 = "1.2.0"
composePlug = "1.6.0-beta01"
androidx-activityCompose = "1.8.2"
voyager = "1.0.0"
composeImageLoader = "1.7.1"
napier = "2.7.1"
kotlinx-coroutines = "1.7.3"
moko-mvvm = "0.16.1"
#moko-rec = "0.23.0"
#moko-graph = "0.9.0"
composeIcons = "1.1.0"
#compose-window-size = "0.3.1"
kotlinx-datetime = "0.5.0"
koin = "3.5.3"
koin-compose = "1.1.0"
extensionsComposeJetbrains = "2.1.4-compose-experimental"
decompose = "2.2.0-alpha03"
kotlinxSerializationJson = "1.6.1"
ktor-ver = "2.3.7"
supabase-ver = "2.0.4"
russhwolf = "1.1.1"
core = "1.12.0"
mp-file-picker = "3.1.0"
#coil = "2.5.0"
#androidx-appcompat = "1.6.1"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
#compose-window-size = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "compose-window-size" }
mp-file-picker = { module = "com.darkrockstudios:mpfilepicker", version.ref = "mp-file-picker" }
zvoyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
moko-mvvm-core = { module = "dev.icerock.moko:mvvm-core", version.ref = "moko-mvvm" }
moko-mvvm-compose = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko-mvvm" }
moko-mvvm-flow = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko-mvvm" }
moko-mvvm-flow-compose = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko-mvvm" }
moko-mvvm-livedata-compose = { module = "dev.icerock.moko:mvvm-livedata-compose", version.ref = "moko-mvvm" }
#moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-rec" }
#moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-rec" }
#moko-graphics = { module = "dev.icerock.moko:graphics", version.ref = "moko-graph" }

composeIcons-featherIcons = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeIcons" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose"}
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "extensionsComposeJetbrains" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-android = { module = "io.ktor:ktor-client-cio", version.ref = "ktor-ver" }
ktor-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor-ver" }
ktor-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor-ver" }
settings-russhwolf = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "russhwolf" }
supabase-gotrue = { module = "io.github.jan-tennert.supabase:gotrue-kt", version.ref = "supabase-ver" }
supabase-realtime = { module = "io.github.jan-tennert.supabase:realtime-kt", version.ref = "supabase-ver" }
supabase-postgrest = { module = "io.github.jan-tennert.supabase:postgrest-kt", version.ref = "supabase-ver" }
supabase-storage = { module = "io.github.jan-tennert.supabase:storage-kt", version.ref = "supabase-ver" }
supabase-auth = { module = "io.github.jan-tennert.supabase:compose-auth", version.ref = "supabase-ver" }
supabase-auth-ui = { module = "io.github.jan-tennert.supabase:compose-auth-ui", version.ref = "supabase-ver" }
androidx-core = { module = "androidx.core:core", version.ref = "core" }
#coil = { module = "io.coil-kt:coil", version.ref = "coil" }
#compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
#androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
composePlugin = { id = "org.jetbrains.compose", version.ref = "composePlug" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
#moko-multiplatform-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-rec" }

